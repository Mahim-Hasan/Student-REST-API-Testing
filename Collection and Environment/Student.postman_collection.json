{
	"info": {
		"_postman_id": "00be2017-2665-414f-895f-0bec2d6a9ccd",
		"name": "Student",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27187339"
	},
	"item": [
		{
			"name": "Get Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var ID = pm.response.json()\r",
							"//console.log(ID.length)\r",
							"//console.log(ID[0])\r",
							"//console.log(ID[2])\r",
							"\r",
							"count = 0\r",
							"for(i=0; i<ID.length; i++){\r",
							"    //pm.environment.set(\"ID\", ID[0].id)\r",
							"    console.log(\"ID: \", ID[i].id)\r",
							"    count++\r",
							"    if(count==4){\r",
							"        pm.environment.set(\"ID\", ID[i].id)\r",
							"        pm.environment.set(\"First Name\", ID[i].first_name)\r",
							"        pm.environment.set(\"Middle Name\", ID[i].middle_name)\r",
							"        pm.environment.set(\"Last Name\", ID[i].last_name)\r",
							"        pm.environment.set(\"DOB\", ID[i].date_of_birth)\r",
							"        break;\r",
							"    }\r",
							"    //pm.environment.set(\"ID\", ID[i].id)\r",
							"    //break;\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/studentsDetails",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"first_name\": \"sample string 2\",\r\n\"middle_name\": \"sample string 3\",\r\n\"last_name\": \"sample string 4\",\r\n\"date_of_birth\": \"sample string 5\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/studentsDetails",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Specific Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsondata = pm.response.json()\r",
							"pm.test(\"ID Validation\", function(){pm.expect(jsondata.data.id).to.eql(pm.environment.get(\"ID\"))})\r",
							"\r",
							"pm.test(\"First Name Validation\", function(){pm.expect(jsondata.data.first_name).to.eql(pm.environment.get(\"First Name\"))})\r",
							"\r",
							"pm.test(\"Middle Name Validation\", function(){pm.expect(jsondata.data.middle_name).to.eql(pm.environment.get(\"Middle Name\"))})\r",
							"\r",
							"pm.test(\"Last Name Validation\", function(){pm.expect(jsondata.data.last_name).to.eql(pm.environment.get(\"Last Name\"))})\r",
							"\r",
							"pm.test(\"Date of Birth Validation\", function(){pm.expect(jsondata.data.date_of_birth).to.eql(pm.environment.get(\"DOB\"))})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/studentsDetails/{{ID}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Technical Skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// var lan = pm.request.json()\r",
							"// pm.environment.set(\"lang1\", request.language[0])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\": 1,\r\n\"language\": [\r\n\"sample string 1\",\r\n\"sample string 2\"\r\n],\r\n\"yearexp\": \"sample string 2\",\r\n\"lastused\": \"sample string 3\",\r\n\"st_id\": {{ID}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/technicalskills",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"technicalskills"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsondata = pm.response.json()\r",
							"pm.test(\"Status Validation\", function(){pm.expect(jsondata.status).to.eql(\"true\")})\r",
							"\r",
							"pm.test(\"msg Validation\", function(){pm.expect(jsondata.msg).to.eql(\"Add  data success\")})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"Permanent_Address\": { \"House_Number\":\r\n\"sample string 1\",\"City\": \"sample string 2\",\r\n\"State\": \"sample string 3\", \"Country\":\r\n\"sample string 4\",\"PhoneNumber\": [\r\n{\r\n\"Std_Code\": \"sample string 1\",\"Home\":\r\n\"sample string 2\", \"Mobile\": \"sample string 3\"\r\n},\r\n{\r\n\"Std_Code\": \"sample string 1\",\"Home\":\r\n\"sample string 2\", \"Mobile\": \"sample string 3\"\r\n}\r\n]\r\n},\r\n\"stId\": {{ID}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/addresses",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "FINAL STUDENT DETAILS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsondata = pm.response.json()\r",
							"\r",
							"console.log(jsondata.data.TechnicalDetails[0].language[0])\r",
							"console.log(jsondata.data.TechnicalDetails[0].language[1])\r",
							"\r",
							"pm.test(\"Language Validation\", function(){pm.expect(jsondata.data.TechnicalDetails[0].language[0]).to.eql(\"sample string 1\")})\r",
							"pm.test(\"Language Validation\", function(){pm.expect(jsondata.data.TechnicalDetails[0].language[1]).to.eql(\"sample string 2\")})\r",
							"pm.test(\"Year of Experience Validation\", function(){pm.expect(jsondata.data.TechnicalDetails[0].yearexp).to.eql(\"sample string 2\")})\r",
							"pm.test(\"House Number Validation\", function(){pm.expect(jsondata.data.Address[0].Permanent_Address.House_Number).to.eql(\"sample string 1\")})\r",
							"pm.test(\"City Validation\", function(){pm.expect(jsondata.data.Address[0].Permanent_Address.City).to.eql(\"sample string 2\")})\r",
							"pm.test(\"Country Validation\", function(){pm.expect(jsondata.data.Address[0].Permanent_Address.Country).to.eql(\"sample string 4\")})\r",
							"pm.test(\"Mobile Validation\", function(){pm.expect(jsondata.data.Address[0].Permanent_Address.PhoneNumber[0].Mobile).to.eql(\"sample string 3\")})\r",
							"pm.test(\"Current Address Validation\", function(){pm.expect(jsondata.data.Address[0].Current_Address).to.eql(null)})\r",
							"\r",
							"\r",
							"//console.log(jsondata.length)\r",
							"//console.log((jsondata.data.TechnicalDetails).length)\r",
							"// for(i=0; i<(jsondata.data.TechnicalDetails.language).length; i++){\r",
							"//     pm.test(\"Language Validation\", function(){pm.expect(jsondata.data.TechnicalDetails.language[i]).to.eql(\"sample string 1,sample string 2\")})\r",
							"\r",
							"// }\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/FinalStudentDetails/{{ID}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"FinalStudentDetails",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	]
}